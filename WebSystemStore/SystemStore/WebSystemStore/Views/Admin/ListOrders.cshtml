@*
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<BLL.Model.Cart.CartDtos>

@{
    ViewData["Title"] = "Order List";
}

<h2>Order List</h2>

<!-- Success or Error Notifications -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        @TempData["Success"]
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

<!-- Orders Table -->
<table class="table">
    <thead>
        <tr>
            <th>Order ID</th>
            <th>Store ID</th>
            <th>Customer ID</th>
            <th>Delivery</th>
            <th>Phone Number</th>
            <th>Order Time</th>
            <th>Status</th>
            <th>Items</th>
            <th>Total Amount</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>@order.Id</td>
                <td>@order.StoreId</td>
                <td>@order.CustomerId</td>
                <td>@order.Delivery</td>
                <td>@order.PhoneNumber</td>
                <td>@order.TimeOrder.ToString("MM/dd/yyyy HH:mm")</td>
                <td>@(order.Status.HasValue ? order.Status.Value : 0)</td>
                <td>
                    <ul>
                        @foreach (var item in order.DetailCarts)
                        {
                            <li>@item.FoodName - Quantity: @item.Quantity, Price: @item.Price.ToString("C"), Total: @item.TotalMoney.ToString("C")</li>
                        }
                    </ul>
                </td>
                <td>@order.DetailCarts.Sum(item => item.TotalMoney).ToString("C")</td>
               @*  <td>
                    <!-- View Order Details -->
                    <a href="@Url.Action("OrderDetails", "Admin", new { orderId = order.Id })" class="btn btn-info">View</a>
                    <!-- Delete Order -->
                    <a href="@Url.Action("DeleteOrder", "Admin", new { orderId = order.Id })" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this order?')">Delete</a>
                </td> *@
           @* </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
<div class="pagination">
    @Html.PagedListPager(Model, page => Url.Action("ListOrders", new { page }))
</div> *@
@model X.PagedList.IPagedList<BLL.Model.Cart.CartDtos>
@using X.PagedList
@using X.PagedList.Mvc.Core

<!DOCTYPE html>
<html>
<head>
    <title>Order List</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
    <style>
        .pagination {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-top: 1rem;
        }

            .pagination a {
                padding: 0.5rem 1rem;
                border: 1px solid #e5e7eb;
                border-radius: 0.375rem;
                color: #374151;
                text-decoration: none;
            }

                .pagination a:hover {
                    background-color: #f3f4f6;
                }

            .pagination .active {
                background-color: #3b82f6;
                color: white;
                border-color: #3b82f6;
            }

        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .status-pending {
            background-color: #fef3c7;
            color: #92400e;
        }

        .status-completed {
            background-color: #d1fae5;
            color: #065f46;
        }

        .status-order {
            background-color: lightgray; /* Nền màu xám nhạt */
            color: blue; /* Chữ màu xanh */
        }
        .status-cancelled {
            background-color: #fee2e2;
            color: #991b1b;
        }

        .shipper-completed{
            background-color: lightgray; /* Nền màu xám nhạt */
            color: yellow; /* Chữ màu xanh */
        }
        
    </style>
</head>
<body class="bg-gray-50">
    <div class="container mx-auto p-6">
        <div class="bg-white rounded-lg shadow-sm">
           
            <!-- Header -->
            <div class="border-b border-gray-200 px-6 py-4">
                <h1 class="text-2xl font-semibold text-gray-800">Order List</h1>
            </div>
            <!-- Search Form -->
            <div class="mb-4 px-6">
                <form method="get" action="@Url.Action("ListOrders", "Admin")">
                    <div class="flex space-x-2">
                        <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" placeholder="Search by Store ID"
                               class="px-4 py-2 border rounded-md w-full" />
                        <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md">Search</button>
                    </div>
                </form>
            </div>

            <!-- Notifications -->
            @if (TempData["Success"] != null)
            {
                <div class="bg-green-50 border-l-4 border-green-400 p-4 m-6">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm text-green-700">@TempData["Success"]</p>
                        </div>
                    </div>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="bg-red-50 border-l-4 border-red-400 p-4 m-6">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm text-red-700">@TempData["Error"]</p>
                        </div>
                    </div>
                </div>
            }

            <!-- Table -->
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Order ID</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Store ID</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Customer ID</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total Amount</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var order in Model)
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@order.Id</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@order.StoreId</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@order.CustomerId</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="status-badge @(order.Status switch {
                                        0 => "status-pending",
                                        1 => "status-order",
                                        2 => "status-cancelled",
                                        3 => "status-completed",
                                        4 =>"shipper-completed"
                                    })">
                                        @(order.Status switch
                                        {
                                            0 => "Placed order successfully",
                                            1 => "Pending",
                                            2=> "Cancel",
                                            3=>"Done",
                                            4 => "Order is being delivered"
                                        })
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @order.DetailCarts.Sum(item => item.TotalMoney).ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <div class="flex space-x-2">
                                        <a href="@Url.Action("OrderDetails", "Admin", new { orderId = order.Id })"
                                           class="text-indigo-600 hover:text-indigo-900">
                                            View
                                        </a>
                                        <a href="@Url.Action("DeleteOrder", "Admin", new { orderId = order.Id })"
                                           class="text-red-600 hover:text-red-900"
                                           onclick="return confirm('Are you sure you want to delete this order?')">
                                            Delete
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="px-6 py-4 border-t border-gray-200">
                @Html.PagedListPager(Model, page => Url.Action("ListOrders", new { page, sortOrder = ViewBag.SortOrder, searchTerm = ViewBag.SearchTerm }))
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const tabs = document.querySelectorAll('.tab-button');
            const contents = document.querySelectorAll('.tab-content');

            tabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    tabs.forEach(t => t.classList.remove('active'));
                    contents.forEach(c => c.classList.add('hidden'));

                    tab.classList.add('active');
                    const target = document.getElementById(tab.dataset.tab);
                    target.classList.remove('hidden');
                });
            });
        });
    </script>
</body>


</html>

