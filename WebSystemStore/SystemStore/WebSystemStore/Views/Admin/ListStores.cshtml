@* @using X.PagedList
@using X.PagedList.Mvc.Core *@

@* @model IPagedList<BLL.Model.Store.StoreDtos>
@{
    ViewData["Title"] = "Stores List";
}

<h2>Stores List</h2>

<table>
    <thead>
        <tr>
            <th>Store ID</th>
            <th>Name</th>
            <th>Address</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var store in Model)
        {
            <tr>
                <td>@store.Id</td>
                <td>@store.Name</td>
                <td>@store.Address</td>
                <td>
                   
                    <a href="@Url.Action("LockStore", "Admin", new { storeId = store.Id })">Lock</a> |
                    <a href="@Url.Action("UnlockStore", "Admin", new { storeId = store.Id })">Unlock</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    @Html.PagedListPager(Model, page => Url.Action("ListStores", new { page }))
</div>*@
@*
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<BLL.Model.Store.StoreDtos>

@{
    ViewData["Title"] = "Store List";
}

<h2>Store List</h2>

<!-- Thông báo thành công hoặc lỗi -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        @TempData["Success"]
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

<!-- Bảng danh sách cửa hàng -->
<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Address</th>
            <th>Opening Time</th>
            <th>Closing Time</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var store in Model)
        {
            <tr>
                <td>@store.Id</td>
                <td>@store.Name</td>
                <td>@store.Address</td>
                <td>@store.TimeOpen.ToString(@"hh\:mm")</td>
                <td>@store.TimeClose.ToString(@"hh\:mm")</td>
                <td>
                    <!-- Xem chi tiết cửa hàng -->
                    <a href="@Url.Action("StoreDetails", "Admin", new { storeId = store.Id })" class="btn btn-info">View</a>
                    <!-- Xóa cửa hàng -->
                    <a href="@Url.Action("DeleteStore", "Admin", new { storeId = store.Id })" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this store?')">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Phân trang -->
<div class="pagination">
    @Html.PagedListPager(Model, page => Url.Action("ListStores", new { page }))
</div>
*@
@*
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<BLL.Model.Store.StoreDtos>

@{
    ViewData["Title"] = "Store List";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
    <div class="container mx-auto p-6">
        <h2 class="text-2xl font-bold text-gray-800 mb-6">Store List</h2>

        <!-- Thông báo thành công hoặc lỗi -->
        @if (TempData["Success"] != null)
        {
            <div class="bg-green-100 text-green-800 p-4 rounded mb-4">
                @TempData["Success"]
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="bg-red-100 text-red-800 p-4 rounded mb-4">
                @TempData["Error"]
            </div>
        }

        <!-- Bảng danh sách cửa hàng -->
        <div class="overflow-x-auto">
            <table class="table-auto w-full bg-white shadow rounded-lg border border-gray-200">
                <thead class="bg-gray-100 text-gray-600 text-left">
                    <tr>
                        <th class="px-4 py-2">ID</th>
                        <th class="px-4 py-2">Name</th>
                        <th class="px-4 py-2">Address</th>
                        <th class="px-4 py-2">Opening Time</th>
                        <th class="px-4 py-2">Closing Time</th>
                        <th class="px-4 py-2">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var store in Model)
                    {
                        <tr class="border-b">
                            <td class="px-4 py-2">@store.Id</td>
                            <td class="px-4 py-2">@store.Name</td>
                            <td class="px-4 py-2">@store.Address</td>
                            <td class="px-4 py-2">@store.TimeOpen.ToString(@"hh\:mm")</td>
                            <td class="px-4 py-2">@store.TimeClose.ToString(@"hh\:mm")</td>
                            <td class="px-4 py-2">
                                <!-- Xem chi tiết cửa hàng -->
                                <a href="@Url.Action("StoreDetails", "Admin", new { storeId = store.Id })"
                                   class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">View</a>
                                <!-- Xóa cửa hàng -->
                                <a href="@Url.Action("DeleteStore", "Admin", new { storeId = store.Id })"
                                   class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600"
                                   onclick="return confirm('Are you sure you want to delete this store?')">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Phân trang -->
        <div class="mt-4 flex justify-center">
            @Html.PagedListPager(
                     Model,
                     page => Url.Action("ListStores", new { page }),
                     new X.PagedList.Web.Common.PagedListRenderOptions
            {
                LiElementClasses = new[] { "inline" },
                PageClasses = new[] { "px-3", "py-2", "border", "text-gray-700", "hover:bg-gray-50" },
                ActiveLiElementClass = "active"
            }
                     )
        </div>
    </div>
</body>
</html>
*@
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<BLL.Model.Store.StoreDtos>

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
    <style>
        .pagination {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-top: 1rem;
        }

            .pagination a {
                padding: 0.5rem 1rem;
                border: 1px solid #e5e7eb;
                border-radius: 0.375rem;
                color: #374151;
                text-decoration: none;
                transition: all 0.2s;
            }

                .pagination a:hover {
                    background-color: #f3f4f6;
                    border-color: #d1d5db;
                }

            .pagination .active {
                background-color: #3b82f6;
                color: white;
                border-color: #3b82f6;
            }

        .tab-button {
            padding: 0.5rem 1rem;
            color: #4b5563;
            font-medium;
            font-size: 0.875rem;
            border-bottom: 2px solid transparent;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .tab-button:hover {
                border-bottom-color: #d1d5db;
            }

            .tab-button.active {
                color: #1f2937;
                border-bottom-color: #3b82f6;
            }

        .tab-content {
            padding: 1rem;
            background-color: #ffffff;
            border: 1px solid #e5e7eb;
            border-radius: 0.375rem;
            margin-top: 1rem;
        }

            .tab-content.hidden {
                display: none;
            }

        .btn-primary {
            display: inline-block;
            padding: 0.5rem 1rem;
            background-color: #3b82f6;
            color: #ffffff;
            font-size: 0.875rem;
            border-radius: 0.375rem;
            text-decoration: none;
            transition: background-color 0.3s ease;
        }

            .btn-primary:hover {
                background-color: #2563eb;
            }
    </style>
</head>
<body class="bg-gray-100">
    <div class="container mx-auto p-6">
       
        <!-- Header -->
        <div class="bg-white rounded-lg shadow-sm">
           
            <div class="border-b border-gray-200 px-6 py-4 flex justify-between items-center">
               
                <h1 class="text-2xl font-semibold text-gray-800">Store List</h1>
                <a href="@Url.Action("CreateStore", "Admin")" class="btn-primary">Add New Store</a>
            </div>
            <!-- Form tìm kiếm -->
            <form method="get" action="@Url.Action("ListStores", "Admin")" class="mb-4">
                <div class="flex items-center space-x-4">
                    <input type="text" name="searchTerm" placeholder="Search stores..." value="@ViewBag.SearchTerm"
                           class="px-4 py-2 border rounded-md" />
                    <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md">Search</button>
                </div>
            </form>

            <!-- Notifications -->
            @if (TempData["Success"] != null)
            {
                <div class="bg-green-50 border-l-4 border-green-400 p-4 m-6">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm text-green-700">@TempData["Success"]</p>
                        </div>
                    </div>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="bg-red-50 border-l-4 border-red-400 p-4 m-6">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm text-red-700">@TempData["Error"]</p>
                        </div>
                    </div>
                </div>
            }

            <!-- Table -->
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200 bg-white">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Address</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Opening Time</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Closing Time</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var store in Model)
                        {
                            <tr class="hover:bg-gray-50 transition-colors">
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@store.Id</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@store.Name</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@store.Address</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@store.TimeOpen.ToString(@"hh\:mm")</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@store.TimeClose.ToString(@"hh\:mm")</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <div class="flex space-x-2">
                                        <a href="@Url.Action("StoreDetails", "Admin", new { storeId = store.Id })"
                                           class="text-indigo-600 hover:text-indigo-900 transition-colors">
                                            View
                                        </a>
                                        @* <a href="@Url.Action("UpdateStoreById", "Admin", new { storeId = store.Id })"
                                           class="text-yellow-600 hover:text-indigo-900 transition-colors">
                                            Update
                                        </a> *@
                                        <a href="@Url.Action("DeleteStore", "Admin", new { storeId = store.Id })"
                                           class="text-red-600 hover:text-red-900 transition-colors"
                                           onclick="return confirm('Are you sure you want to delete this store?')">
                                            Delete
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="px-6 py-4 border-t border-gray-200">
                @Html.PagedListPager(Model, page => Url.Action("ListStores", new { page, searchTerm = ViewBag.SearchTerm }))
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const tabs = document.querySelectorAll('.tab-button');
            const contents = document.querySelectorAll('.tab-content');

            tabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    // Remove active state from all tabs and contents
                    tabs.forEach(t => t.classList.remove('active'));
                    contents.forEach(c => c.classList.add('hidden'));

                    // Add active state to selected tab and corresponding content
                    tab.classList.add('active');
                    const target = document.getElementById(tab.dataset.tab);
                    target.classList.remove('hidden');
                });
            });
        });
    </script>
</body>
</html>

