@* @model IEnumerable<BLL.Model.Cart.CartDtos>

@{
    ViewData["Title"] = "Lịch sử đơn hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var sortedOrders = Model?.OrderByDescending(order => order.TimeOrder).ToList();
}

<h2>Lịch sử đơn hàng</h2>

@if (sortedOrders != null && sortedOrders.Any())
{
    foreach (var order in sortedOrders)
    {
        <div class="card mt-4">
            <div class="card-header">
                <h5 class="card-title">Thông tin đơn hàng</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <p><strong>ID Đơn hàng:</strong> @order.Id</p>
                        <p><strong>Ngày đặt hàng:</strong> @order.TimeOrder.ToString("dd/MM/yyyy HH:mm:ss")</p>
                        <p><strong>Địa chỉ giao hàng:</strong> @order.Delivery</p>
                        <p><strong>Số điện thoại:</strong> @order.PhoneNumber</p>
                    </div>
                    <div class="col-md-6">
                        <p><strong>Trạng thái:</strong> @order.GetStatusLabel()</p>
                        <label class="@order.GetStatusClass() text-center status-order">@order.GetStatusLabel()</label>
                        <p><strong>Tổng tiền:</strong> @String.Format("{0:0,0}", CalculateTotalAmount(order.DetailCarts)) VNĐ</p>
                    </div>
                </div>
            </div>

            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="card-title">Chi tiết đơn hàng</h5>
                </div>
                <div class="card-body">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Tên Món ăn</th>
                                <th>Số lượng</th>
                                <th>Giá</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (order.DetailCarts != null && order.DetailCarts.Count > 0)
                            {
                                foreach (var item in order.DetailCarts)
                                {
                                    <tr>
                                        <td>@item.FoodName</td>
                                        <td>@item.Quantity</td>
                                        <td>@String.Format("{0:0,0}", item.Price) VNĐ</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="3" class="text-center">Không có chi tiết đơn hàng.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
}
else
{
    <p>Không tìm thấy thông tin lịch sử đơn hàng.</p>
}

@functions {
    // Hàm tính tổng tiền dựa trên danh sách chi tiết đơn hàng
    public decimal CalculateTotalAmount(List<BLL.Model.Cart.CartItemDtos> detailCarts)
    {
        if (detailCarts == null || detailCarts.Count == 0)
        {
            return 0;
        }

        // Tính tổng số tiền bằng cách lặp qua từng mặt hàng và nhân số lượng với giá
        decimal totalAmount = detailCarts.Sum(item => item.Quantity * item.Price);
        return totalAmount;
    }
}
 *@

@model IEnumerable<BLL.Model.Cart.CartDtos>
@{
ViewData["Title"] = "Lịch sử đơn hàng";
Layout = "~/Views/Shared/_Layout.cshtml";
var sortedOrders = Model?.OrderByDescending(order => order.TimeOrder).ToList();
}
<h2 class="text-3xl font-bold mb-6">Lịch sử đơn hàng</h2>
@if (sortedOrders != null && sortedOrders.Any())
{
foreach (var order in sortedOrders)
{
        <div class="bg-white shadow-md rounded-lg mb-6 p-6">
            <div class="mb-4">
                <h5 class="text-xl font-semibold text-gray-800">Thông tin đơn hàng</h5>
            </div>
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
                <div>
                    <p class="text-sm text-gray-700"><strong>ID Đơn hàng:</strong> @order.Id</p>
                    <p class="text-sm text-gray-700"><strong>Ngày đặt hàng:</strong> @order.TimeOrder.ToString("dd/MM/yyyy HH:mm:ss")</p>
                    <p class="text-sm text-gray-700"><strong>Địa chỉ giao hàng:</strong> @order.Delivery</p>
                    <p class="text-sm text-gray-700"><strong>Số điện thoại:</strong> @order.PhoneNumber</p>
                    <!-- Thanh toán trạng thái -->
                    @if (order.MomoStatus == null)
                    {
                        <div class="p-4 bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 rounded-md flex items-center mb-4">
                            <svg class="w-6 h-6 text-yellow-500 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M12 20a8 8 0 100-16 8 8 0 000 16z" />
                            </svg>
                            <p class="text-sm font-medium">Thanh toán: <span class="font-bold">Tiền mặt</span></p>
                        </div>
                    }
                    else if (order.MomoStatus == "Thành công")
                    {
                        <div class="p-4 bg-green-100 border-l-4 border-green-500 text-green-700 rounded-md flex items-center mb-4">
                            <svg class="w-6 h-6 text-green-500 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                            </svg>
                            <p class="text-sm font-medium">Thanh toán (MOMO): <span class="font-bold">@order.MomoStatus</span></p>
                        </div>
                    }
                    else if (order.MomoStatus == "Thất bại")
                    {
                        <div class="p-4 bg-red-100 border-l-4 border-red-500 text-red-700 rounded-md flex items-center mb-4">
                            <svg class="w-6 h-6 text-red-500 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                            <p class="text-sm font-medium">Thanh toán (MOMO): <span class="font-bold">@order.MomoStatus</span></p>
                        </div>
                    }
                </div>
                <div class="flex flex-col justify-between">
                    <div>
                        <p class="text-sm text-gray-700"><strong>Trạng thái:</strong> @order.GetStatusLabel()</p>
                        <label class="@order.GetStatusClass() text-center status-order">@order.GetStatusLabel()</label>
                    </div>
                </div>
            </div>
        </div>

        <!-- Chi tiết đơn hàng -->
        <div class="bg-white shadow-md rounded-lg p-6 mb-6">
            <div class="mb-4">
                <h5 class="text-xl font-semibold text-gray-800">Chi tiết đơn hàng</h5>
            </div>
            <table class="min-w-full table-auto">
                <thead class="bg-gray-100">
                    <tr>
                        <th class="px-4 py-2 text-sm text-gray-700">Tên Món ăn</th>
                        <th class="px-4 py-2 text-sm text-gray-700">Số lượng</th>
                        <th class="px-4 py-2 text-sm text-gray-700">Giá</th>
                    </tr>
                </thead>
                <tbody>
                    @if (order.DetailCarts != null && order.DetailCarts.Count > 0)
                    {
                        foreach (var item in order.DetailCarts)
                        {
                            <tr class="border-t">
                                <td class="px-4 py-2 text-sm text-gray-700">@item.FoodName</td>
                                <td class="px-4 py-2 text-sm text-gray-700">@item.Quantity</td>
                                <td class="px-4 py-2 text-sm text-gray-700">@item.Price.ToString("N0") VNĐ</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="3" class="px-4 py-2 text-center text-sm text-gray-700">Không có chi tiết đơn hàng.</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="flex justify-end mt-4">
                <p class="text-lg font-semibold text-gray-800">Tổng tiền: @String.Format("{0:0,0}", CalculateTotalAmount(order.DetailCarts)) VNĐ</p>
            </div>
        </div>
    }
}
else
{
    <p class="text-center text-lg text-gray-500">Không tìm thấy thông tin lịch sử đơn hàng.</p>
}

@functions {
    // Hàm tính tổng tiền dựa trên danh sách chi tiết đơn hàng
    public decimal CalculateTotalAmount(List<BLL.Model.Cart.CartItemDtos> detailCarts)
    {
        if (detailCarts == null || detailCarts.Count == 0)
        {
            return 0;
        }

        // Tính tổng số tiền bằng cách lặp qua từng mặt hàng và nhân số lượng với giá
        decimal totalAmount = detailCarts.Sum(item => item.Quantity * item.Price);
        return totalAmount;
    }
}
<script src="https://cdn.tailwindcss.com"></script>
